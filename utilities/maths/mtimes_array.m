function c=mtimes_array(a,b)
% Matrix multiplication of first two of three dimensions for a few limited cases
%
%   >> c=mtimes_array(a,b)
%
%   a   3x3xN array
%   b   3xMxN array, M=1,2,3,...
%
% Designed for 3D coordinate transformations e.g.
%   M=1     columns of B are coordinates of a position
%   M=3     first two dimensions of B are 3x3 matrix
%   M=4     four columns of B are four verticies of a rectangle


sa=size(a);
sb=size(b);

if numel(sa)~=3||sa(1)~=3||sa(2)~=3
    error('Check dimensions of left hand array')
elseif numel(sb)~=3||sb(1)~=3||sb(2)<1
    error('Check dimensions of right hand array')
elseif sa(3)~=sb(3)
    error('Check third dimensions of input arguments')
end

M=sb(2);
c=zeros(size(b));

if M==1
    c(1,1,:) = a(1,1,:).*b(1,1,:) + a(1,2,:).*b(2,1,:) + a(1,3,:).*b(3,1,:);
    c(2,1,:) = a(2,1,:).*b(1,1,:) + a(2,2,:).*b(2,1,:) + a(2,3,:).*b(3,1,:);
    c(3,1,:) = a(3,1,:).*b(1,1,:) + a(3,2,:).*b(2,1,:) + a(3,3,:).*b(3,1,:);
elseif M==2
    c(1,1,:) = a(1,1,:).*b(1,1,:) + a(1,2,:).*b(2,1,:) + a(1,3,:).*b(3,1,:);
    c(2,1,:) = a(2,1,:).*b(1,1,:) + a(2,2,:).*b(2,1,:) + a(2,3,:).*b(3,1,:);
    c(3,1,:) = a(3,1,:).*b(1,1,:) + a(3,2,:).*b(2,1,:) + a(3,3,:).*b(3,1,:);
    c(1,2,:) = a(1,1,:).*b(1,2,:) + a(1,2,:).*b(2,2,:) + a(1,3,:).*b(3,2,:);
    c(2,2,:) = a(2,1,:).*b(1,2,:) + a(2,2,:).*b(2,2,:) + a(2,3,:).*b(3,2,:);
    c(3,2,:) = a(3,1,:).*b(1,2,:) + a(3,2,:).*b(2,2,:) + a(3,3,:).*b(3,2,:);
elseif M==3
    c(1,1,:) = a(1,1,:).*b(1,1,:) + a(1,2,:).*b(2,1,:) + a(1,3,:).*b(3,1,:);
    c(2,1,:) = a(2,1,:).*b(1,1,:) + a(2,2,:).*b(2,1,:) + a(2,3,:).*b(3,1,:);
    c(3,1,:) = a(3,1,:).*b(1,1,:) + a(3,2,:).*b(2,1,:) + a(3,3,:).*b(3,1,:);
    c(1,2,:) = a(1,1,:).*b(1,2,:) + a(1,2,:).*b(2,2,:) + a(1,3,:).*b(3,2,:);
    c(2,2,:) = a(2,1,:).*b(1,2,:) + a(2,2,:).*b(2,2,:) + a(2,3,:).*b(3,2,:);
    c(3,2,:) = a(3,1,:).*b(1,2,:) + a(3,2,:).*b(2,2,:) + a(3,3,:).*b(3,2,:);
    c(1,3,:) = a(1,1,:).*b(1,3,:) + a(1,2,:).*b(2,3,:) + a(1,3,:).*b(3,3,:);
    c(2,3,:) = a(2,1,:).*b(1,3,:) + a(2,2,:).*b(2,3,:) + a(2,3,:).*b(3,3,:);
    c(3,3,:) = a(3,1,:).*b(1,3,:) + a(3,2,:).*b(2,3,:) + a(3,3,:).*b(3,3,:);
elseif M==4
    c(1,1,:) = a(1,1,:).*b(1,1,:) + a(1,2,:).*b(2,1,:) + a(1,3,:).*b(3,1,:);
    c(2,1,:) = a(2,1,:).*b(1,1,:) + a(2,2,:).*b(2,1,:) + a(2,3,:).*b(3,1,:);
    c(3,1,:) = a(3,1,:).*b(1,1,:) + a(3,2,:).*b(2,1,:) + a(3,3,:).*b(3,1,:);
    c(1,2,:) = a(1,1,:).*b(1,2,:) + a(1,2,:).*b(2,2,:) + a(1,3,:).*b(3,2,:);
    c(2,2,:) = a(2,1,:).*b(1,2,:) + a(2,2,:).*b(2,2,:) + a(2,3,:).*b(3,2,:);
    c(3,2,:) = a(3,1,:).*b(1,2,:) + a(3,2,:).*b(2,2,:) + a(3,3,:).*b(3,2,:);
    c(1,3,:) = a(1,1,:).*b(1,3,:) + a(1,2,:).*b(2,3,:) + a(1,3,:).*b(3,3,:);
    c(2,3,:) = a(2,1,:).*b(1,3,:) + a(2,2,:).*b(2,3,:) + a(2,3,:).*b(3,3,:);
    c(3,3,:) = a(3,1,:).*b(1,3,:) + a(3,2,:).*b(2,3,:) + a(3,3,:).*b(3,3,:);
    c(1,4,:) = a(1,1,:).*b(1,4,:) + a(1,2,:).*b(2,4,:) + a(1,3,:).*b(3,4,:);
    c(2,4,:) = a(2,1,:).*b(1,4,:) + a(2,2,:).*b(2,4,:) + a(2,3,:).*b(3,4,:);
    c(3,4,:) = a(3,1,:).*b(1,4,:) + a(3,2,:).*b(2,4,:) + a(3,3,:).*b(3,4,:);
elseif M>4
    for i=1:M
        c(1,i,:) = a(1,1,:).*b(1,i,:) + a(1,2,:).*b(2,i,:) + a(1,3,:).*b(3,i,:);
        c(2,i,:) = a(2,1,:).*b(1,i,:) + a(2,2,:).*b(2,i,:) + a(2,3,:).*b(3,i,:);
        c(3,i,:) = a(3,1,:).*b(1,i,:) + a(3,2,:).*b(2,i,:) + a(3,3,:).*b(3,i,:);
    end
end
