function [ok,err_mess,je]=worker_4tests(worker_controls_string)
% function used as standard worker to do a job in a separate Matlab
% session.
%
% To work, should be present on a data search path, before Herbert is
% initialized as may need to initialize Herbert and Horace itself
%
%Inputs:
% worker_controls_string - the structure, containing information, necessary to
%              initiate the job.
%              Due to the fact this string is transferred
%              through pipes its size is system dependent and limited, so
%              contains only minimal initialization information, namely the
%              folder name where the job initialization data are located on
%              a remote system.
je = [];
if isempty(which('herbert_init.m'))
    herbert_on();
    %horace_on('c:\Users\abuts\Documents\developing_soft\Horace_3_4\horace_core');
end
DO_LOGGING = false;
DO_DEBUGGING = false;
try
    [ok, err_mess,je] = parallel_worker(worker_controls_string,DO_LOGGING,DO_DEBUGGING);
catch ME1 % intercepted exception in processing failure or some odd bug indeed
    ok = false;
    if exist('je','var') && isa(je,'JobExecutor') %exception thrown but JE is defined
        if isnumeric(je.labIndex) && ~isempty(je.labIndex)
            log_file = fullfile(tempdir,sprintf('WORKER_V2_Node#%d_failure.log',je.labIndex));
        else
            log_file = fullfile(tempdir,sprintf('WORKER_V2_Node_JE_common_failure.log'));
        end
    else
        log_file = fullfile(tempdir,'WORKER_V2_JE_FAIL_PROCESSING_failure.log');
    end
    err_mess = ME1;
end
if ~ok && isa(err_mess,'MException')
    if isa(je,'JobExecutor')
        log_file = fullfile(tempdir,sprintf('WORKER_V2_Node#%d_failure.log',je.labIndex));        
    elseif isempty(je)
        log_file = fullfile(tempdir,'WORKER_V2_INIT_failure.log');
    end
    
    fh = fopen(log_file,'w');
    fprintf(fh,'******* Unhandled exception during initialization procedure\n');
    fprintf(fh,'******** ERROR: \n');
    fprintf(fh,'%s',getReport(err_mess));
    fclose(fh);
end

