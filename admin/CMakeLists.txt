# Copy template files into <build_dir>/local_init
file(MAKE_DIRECTORY ${LOCAL_INIT_DIR})

# Configure and copy horace_on into the build directory.
# This directory is added to the Matlab path when CTest is run, so that
# parallel workers can access horace_on/worker scripts.
# Note that LOCAL_INIT_DIR is defined in the top-level CMakeLists
configure_file("horace_on.m.template" "${LOCAL_INIT_DIR}/horace_on.m")
configure_file("herbert_on.m.template" "${LOCAL_INIT_DIR}/herbert_on.m")

# Copy Horace worker templates
if(BUILD_TESTING)
    configure_file("worker_4tests.m.template" "${LOCAL_INIT_DIR}/worker_4tests.m")
endif()
configure_file("worker_v2.m.template" "${LOCAL_INIT_DIR}/worker_v2.m")

set(Horace_AUTO_GENERATED_FILE_WARNING
    "This file is auto-generated by CMake. Do not edit, any edits may be lost.")

# Configure the horace_version.m script. The template script is copied into
# herbert_core/admin and CMake's project version formatted into it. This
# provides the function with an up-to-date version number for every build.
configure_file("horace_get_build_version.m.template"
               "${Horace_ROOT}/horace_core/admin/horace_get_build_version.m")

# Configure the version.h header. The template is copied into _LowLevelCode/cpp
# and defines macro VERSION with CMake's project version.
configure_file("version.h.template"
               "${Horace_ROOT}/_LowLevelCode/cpp/utility/version.h")

# Runs docify
configure_file("run_docify.m" "${CMAKE_CURRENT_BINARY_DIR}/run_docify.m")
add_custom_target(run_docify)
add_custom_command(
    TARGET run_docify
    COMMAND ${Matlab_MAIN_PROGRAM} -batch "run_docify"
)

# =============================================================================
# Install commands
# =============================================================================
install(
    FILES
        "horace_on.m.template"
        "herbert_on.m.template"
        "worker_v2.m.template"
        "horace_install.m"
    DESTINATION "."
)
