function val = del_d (alf)
% Mean depth of absorption in a 3He cylindrical tube
%
%   >> val = del_d (alf)
%
% Input:
% ------
%   alf     Inner diameter of 3He tube as a multiple of the macroscopic
%          absoprtion cross-section (scalar or array)
%
% Output:
% -------
%   val     Mean depth of aborption with respect to axis of tube as a
%          fraction of the radius (same size and shape as alf)
%
%
% History of the algorithm
% ------------------------
%
%  T.G.Perring June 1990:
%
%  Algorithm is based on a combination of Taylor series and
%  assymptotic expansion of the double integral for the
%  efficiency, linearly interpolating betweent the two in
%  region of common accuracy. Checked against numerical
%  integration to yield relative accuracy of 1 part in 10^12
%  or better over the entire domain of the input arguments
%
%  T.G.Perring August 2015:
%
%  Fortran code minimally adapted for Matlab


% Original author: T.G.Perring
%
% $Revision$ ($Date$)


c_eff_g = [2.033429926215546,...
    -2.3123407369310212E-02, 7.0671915734894875E-03,...
    -7.5970017538257162E-04, 7.4848652541832373E-05,...
     4.5642679186460588E-05,-2.3097291253000307E-05,...
     1.9697221715275770E-06, 2.4115259271262346E-06,...
    -7.1302220919333692E-07,-2.5124427621592282E-07,...
     1.3246884875139919E-07, 3.4364196805913849E-08,...
    -2.2891359549026546E-08,-6.7281240212491156E-09,...
     3.8292458615085678E-09, 1.6451021034313840E-09,...
    -5.5868962123284405E-10,-4.2052310689211225E-10,...
     4.3217612266666094E-11, 9.9547699528024225E-11,...
     1.2882834243832519E-11,-1.9103066351000564E-11,...
    -7.6805495297094239E-12, 1.8568853399347773E-12];

c_del_f = [1.457564928500728,...
    -0.2741263150129247,     1.4102406058428482E-02,...
     1.1868136977190956E-02,-4.7000120888695418E-03,...
     6.7071002620380348E-04, 1.2315212155928235E-04,...
    -8.7985748380390304E-05, 1.8952644758594150E-05,...
     4.4101711646149510E-07,-1.5292393205490473E-06,...
     4.5050196748941396E-07,-2.9971703975339992E-08,...
    -2.3573145628841274E-08, 9.6228336343706644E-09,...
    -1.3038786850216866E-09,-2.9423462000188749E-10,...
     1.8813720970012326E-10,-3.7682054143672871E-11,...
    -1.9125961925325896E-12, 3.3516145414580478E-12,...
    -9.0842416922143343E-13, 4.3951786654616853E-14,...
     4.5793924208226145E-14,-1.4916540225229369E-14];
 
c_del_g = [1.980495234559052,...
     1.3148750635418816E-02,-3.5137830163154959E-03,...
     1.4111112411286597E-04,-2.4707009281715875E-05,...
    -4.9602024972950076E-08, 1.5268651833078018E-06,...
    -4.8070752083129165E-07,-3.5826648758785495E-08,...
     6.0264253483044428E-08,-4.2948016776289677E-09,...
    -7.5840171520624722E-09, 1.0468151234732659E-09,...
     1.1267346944343615E-09,-1.4810551229871294E-10,...
    -1.9605287726598419E-10, 9.8596597553068932E-12,...
     3.6752354493074790E-11, 3.2634850377633029E-12,...
    -6.6207839211074316E-12,-1.9158341579839089E-12,...
     9.6091495871419851E-13, 6.3198529742791721E-13,...
    -6.4681177081027385E-14,-1.8198241524824965E-13];

val=zeros(size(alf));
ilo=(alf<=9);
ihi=(alf>=10);
imix=(alf>9 & alf<10);

if any(ilo(:))
    val(ilo) = -0.125*(alf(ilo).*effchb(0,10,c_del_f,alf(ilo)));
end

if any(ihi(:))
    y = 1-18./alf(ihi);
    eff = 1 - effchb(-1,1,c_eff_g,y)./(alf(ihi).^2);
    val(ihi) = (2*effchb(-1,1,c_del_g,y)./alf(ihi) - pi/4) ./ eff;
end

if any(imix(:))
    del_f = -0.125*(alf(imix).*effchb(0,10,c_del_f,alf(imix)));
    y = 1-18./alf(imix);
    eff = 1 - effchb(-1,1,c_eff_g,y)./(alf(imix).^2);
    del_g = (2*effchb(-1,1,c_del_g,y)./alf(imix) - pi/4) ./ eff;
    val(imix) = (10-alf(imix)).*del_f  + (alf(imix)-9).*del_g;
end

%---------------------------------------------------------------------
function y=effchb(a,b,c,x)
% Essentially CHEBEV of "Numerical Recipes"
d=zeros(size(x)); dd=zeros(size(x)); y=(2*x-a-b)/(b-a); y2=2*y;
for j=numel(c):-1:2
    sv=d;
    d=(y2.*d-dd)+c(j);
    dd=sv;
end
y=(y.*d-dd)+0.5*c(1);
